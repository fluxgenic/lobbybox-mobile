name: Deploy Node API to Azure App Service

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: node-api-azure-deploy
  cancel-in-progress: true

env:
  NODE_VERSION: "22.x"
  APP_DIRECTORY: "lobbybox-guard"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.APP_DIRECTORY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: |
            ${{ env.APP_DIRECTORY }}/package-lock.json
            ${{ env.APP_DIRECTORY }}/npm-shrinkwrap.json
            ${{ env.APP_DIRECTORY }}/package.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci --omit=dev
          else
            npm install --omit=dev
          fi

      - name: Detect build script
        id: package-json
        run: |
          if [ -f package.json ]; then
            node -e "const fs = require('fs'); const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8')); const hasBuild = Boolean(pkg.scripts && pkg.scripts.build); console.log(`has_build=${hasBuild}`);" >> "$GITHUB_OUTPUT"
          else
            echo "has_build=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build application
        if: steps.package-json.outputs.has_build == 'true'
        run: npm run build

      - name: Copy deployment package
        run: |
          mkdir -p build-artifact
          if [ -d dist ]; then
            cp -R dist/. build-artifact/
          elif [ -d build ]; then
            cp -R build/. build-artifact/
          else
            rsync -av --exclude=node_modules --exclude=.next --exclude=.git ./ build-artifact/
          fi

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: build-artifact
